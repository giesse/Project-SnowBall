COLLECT function

    Type: Module
    Purpose: {
        Defines the COLLECT function.
    }
    Author: "Gabriele Santilli"
    License: {
        =================================
        A message from Qtask about this source code:

        We have selected the MIT license (as of 2010-Jan-1) because
        it is the closest “standard” license to our intent.  If we had our way,
        we would declare this source as public domain, with absolutely no
        strings attached, not even the string that says you have to have
        strings.  We want to help people, so please feel free to contact us
        at API@Qtask.com if you have questions.
         

        (you only need to include the standard license text below in your
        homage to this source code)
        =================================

        Copyright 2009 Qtask, Inc.

        Permission is hereby granted, free of charge, to any person obtaining
        a copy of this software and associated documentation files
        (the "Software"), to deal in the Software without restriction, including
        without limitation the rights to use, copy, modify, merge, publish,
        distribute, sublicense, and/or sell copies of the Software, and to
        permit persons to whom the Software is furnished to do so, subject
        to the following conditions:

        The above copyright notice and this permission notice shall be included
        in all copies or substantial portions of the Software.

        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
        THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
        OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
        ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
        OTHER DEALINGS IN THE SOFTWARE.
    }
    File: %collect.r
    Version: 1.0.0
    Exports: [
        collect
        keep
    ]

===Introduction

A very common idiom in REBOL is:

    func [block /local result] [
        result: copy [ ]
        foreach val block [
            append result do-something-with val
        ]
        result
    ]

which the |collect| function turns into:

    func [block] [
        collect [
            foreach val block [
                keep do-something-with val
            ]
        ]
    ]

===Overview

    -main-:
    collect: func [
        "Collect values passed to KEEP and return them"
        [throw]
        body [block!]
        /into result [series!] "Append values to this series"

        /local -c-locals-
    ] [
        -collect-
    ]
    keep: func [
        "Append the value to the collection"
        [catch]
        value
        /only "Append a block value as a block"
    ] [
        -keep-
    ]

===Collect values passed to |keep|

    -collect-:
    saved: collection
    collection: any [result result: copy [ ]]
    do body
    collection: saved
    result

---|collect|'s locals

    -c-locals-:
    saved

===Append |value| to the current collection

    -keep-:
    unless collection [
        throw make error! "KEEP outside of a COLLECT"
    ]
    either only [
        append/only collection :value
    ] [
        append collection :value
    ]

===Initialization

    -main-:
    collection: none
