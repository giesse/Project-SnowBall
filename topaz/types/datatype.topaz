; Topaz types: DATATYPE!
;
; Copyright 2011 Gabriele Santilli
;
; Permission is hereby granted, free of charge, to any person obtaining
; a copy of this software and associated documentation files
; (the "Software"), to deal in the Software without restriction, including
; without limitation the rights to use, copy, modify, merge, publish,
; distribute, sublicense, and/or sell copies of the Software, and to
; permit persons to whom the Software is furnished to do so, subject
; to the following conditions:
;
; The above copyright notice and this permission notice shall be included
; in all copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
; OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
; THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
; OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
; OTHER DEALINGS IN THE SOFTWARE.

; ===== TYPES: DATATYPE! ======================================================

; datatype! has a circular reference
datatype!: none

datatypes: make-array

; make-type is defined as a macro in compile-topaz.topaz

make-type 'datatype! [
    mold: function [type indent] [] [
        type/name
    ]
    do: function [type block] [] [
        reduce [type skip block 1]
    ]
    bind: function [type context extend?] [] [
        type
    ]
    topaz-make: function [ignored] [] [
        error make-struct [
            category: "Internal"
            id: "not-implemented"
            message: "Cannot make datatypes (yet)"
        ]
    ]
    compile: function [type block] [] [
        reduce [ast-value type skip block 1]
    ]
    equal?: function [type value] [] [false]
]
datatype!/("datatype!"): make-struct [
    equal?: function [type1 type2] [] [type1/name = type2/name]
]

; fix the circular reference
datatype!/type: datatype!
