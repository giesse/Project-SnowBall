; Compile the new Topaz code in ../next/

collect-set-words: func [output block] [
    foreach 'value block [
        case [
            set-word? value [
                value: to-word value
                if not find output value [append output value]
            ]
            any-block? value [collect-set-words output value]
        ]
    ]
    output
]

custom: context [
    func: make function! reduce [[spec body] [
        reduce ['func spec body]
    ]]
]

output: [
]

actions: context skip load read "next/actions.topaz" 2
internal-actions: context skip load read "next/internal-actions.topaz" 2

types-dir: "next/types/"

types: []
make-type: func [spec] [
    type: context [
        name: based-on: properties: maker: reflectors: actions: support:
        natives: none
    ]
    do bind spec type
    if block? type/reflectors [
        type/reflectors: context type/reflectors
    ]
    if block? type/actions [
        type/actions: context type/actions
    ]
    if block? type/support [
        type/support: context type/support
    ]
    if block? type/natives [
        type/natives: context type/natives
    ]
    type
]

foreach 'file read types-dir [
    file: make-type bind skip load read rejoin [types-dir file] 2 custom
    append types make set-word! mold file/name
    append types file
]

probe context types
