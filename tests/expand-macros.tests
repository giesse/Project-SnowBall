REBOL [
    Type: Module
    Title: "Tests for EXPAND-MACROS"
    Author: "Gabriele Santilli"
    Imports: [%bootstrap/expand-macros.r]
]

[
    m: macro [a b] [add a b]
    f: func [a b] expand-macros [multiply a m b 3]
    mold :f
]
[
    make-node: macro [type] [reduce [type none copy [ ]]]
    set-parent: macro [node parent] [insert/only poke node 2 tail parent node]
    get-child: macro [node child] [pick node (3 + child)]
    expand-macros [
        root: make-node 'root
        node: make-node 'branch
        set-parent node root
        node: make-node 'leaf
        set-parent node (get-child root 1)
        node: make-node 'branch
        set-parent node root
        node: make-node 'branch
        set-parent node (get-child root 2)
        node: make-node 'leaf
        set-parent node (get-child (get-child root 2) 1)
        node: make-node 'leaf
        set-parent node (get-child (get-child root 2) 1)
    ]
]
[
    !get-node-type: macro [node] [first node]
    !make-node: macro [type properties] [reduce [type #[none] copy properties]]
    !get-node-properties: macro [node] [third node]
    !get-node-parent: macro [node] [all [_tmp: second node head _tmp]]
    expand-macros [
        in-func 'split-branch
        unless block? base [base: reduce [base]]
        unless knots [knot-nodes: [ ]]
        unless prune [prune-nodes: [ ]]
        unless block? knot-nodes [knot-nodes: reduce [knot-nodes]]
        unless block? prune-nodes [prune-nodes: reduce [prune-nodes]]
        node: niwashi/current-node
        branch: copy [ ]
        to-leave: clear [ ]
        while [not find base type: !get-node-type node] [
            if find knot-nodes type [
                throw make error! join "Cannot cut through '" [type "' nodes"]
            ]
            unless find prune-nodes type [
                new-node: !make-node type (!get-node-properties node)
                insert/only branch new-node
            ]
            append/only to-leave node
            unless node: !get-node-parent node [
                throw make error! join "No nodes of type '" [base "' found in the current branch"]
            ]
        ]
        niwashi/current-node: node
        foreach node to-leave [
            on-leave niwashi node
        ]
        niwashi/branch: branch
        out-func 'split-branch
    ]
]
[
    m: macro [] [1 2 (3)]
    expand-macros [m]
]
